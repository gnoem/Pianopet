[{"/Users/ngw/Documents/Sites/Pianopet/client/src/index.js":"1","/Users/ngw/Documents/Sites/Pianopet/client/src/App.js":"2","/Users/ngw/Documents/Sites/Pianopet/client/src/reportWebVitals.js":"3","/Users/ngw/Documents/Sites/Pianopet/client/src/components/Dashboard.js":"4","/Users/ngw/Documents/Sites/Pianopet/client/src/AppContext.js":"5","/Users/ngw/Documents/Sites/Pianopet/client/src/utils/index.js":"6","/Users/ngw/Documents/Sites/Pianopet/client/src/components/Guest.js":"7","/Users/ngw/Documents/Sites/Pianopet/client/src/components/Loading.js":"8","/Users/ngw/Documents/Sites/Pianopet/client/src/components/MiniMenu.js":"9","/Users/ngw/Documents/Sites/Pianopet/client/src/components/Modal.js":"10","/Users/ngw/Documents/Sites/Pianopet/client/src/components/Student.js":"11","/Users/ngw/Documents/Sites/Pianopet/client/src/components/Teacher.js":"12","/Users/ngw/Documents/Sites/Pianopet/client/src/components/Marketplace.js":"13","/Users/ngw/Documents/Sites/Pianopet/client/src/components/Teacherr.js":"14","/Users/ngw/Documents/Sites/Pianopet/client/src/components/ViewStudent.js":"15"},{"size":500,"mtime":1607403407622,"results":"16","hashOfConfig":"17"},{"size":1545,"mtime":1612581514731,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1607403407623,"results":"19","hashOfConfig":"17"},{"size":861,"mtime":1612426425775,"results":"20","hashOfConfig":"17"},{"size":97,"mtime":1607733049448,"results":"21","hashOfConfig":"17"},{"size":238,"mtime":1607726052220,"results":"22","hashOfConfig":"17"},{"size":8975,"mtime":1612233906671,"results":"23","hashOfConfig":"17"},{"size":234,"mtime":1612233939058,"results":"24","hashOfConfig":"17"},{"size":684,"mtime":1612233978520,"results":"25","hashOfConfig":"17"},{"size":965,"mtime":1612233987275,"results":"26","hashOfConfig":"17"},{"size":7204,"mtime":1612236691840,"results":"27","hashOfConfig":"17"},{"size":25003,"mtime":1612580121908,"results":"28","hashOfConfig":"17"},{"size":1902,"mtime":1612576314691,"results":"29","hashOfConfig":"17"},{"size":7052,"mtime":1612591783172,"results":"30","hashOfConfig":"17"},{"size":16732,"mtime":1612596971144,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"sahw5t",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/ngw/Documents/Sites/Pianopet/client/src/index.js",[],["64","65"],"/Users/ngw/Documents/Sites/Pianopet/client/src/App.js",[],"/Users/ngw/Documents/Sites/Pianopet/client/src/reportWebVitals.js",[],"/Users/ngw/Documents/Sites/Pianopet/client/src/components/Dashboard.js",[],"/Users/ngw/Documents/Sites/Pianopet/client/src/AppContext.js",[],"/Users/ngw/Documents/Sites/Pianopet/client/src/utils/index.js",[],"/Users/ngw/Documents/Sites/Pianopet/client/src/components/Guest.js",[],"/Users/ngw/Documents/Sites/Pianopet/client/src/components/Loading.js",[],"/Users/ngw/Documents/Sites/Pianopet/client/src/components/MiniMenu.js",[],"/Users/ngw/Documents/Sites/Pianopet/client/src/components/Modal.js",[],"/Users/ngw/Documents/Sites/Pianopet/client/src/components/Student.js",["66"],"import React, { useState, useEffect, useContext } from 'react';\nimport { prettifyDate } from '../utils';\nimport Loading from './Loading';\nimport { Dashboard, Header, Sidebar, Nav } from './Dashboard'\n\nconst StudentContext = React.createContext();\nconst HomeworkContext = React.createContext();\n\nfunction Student(props) {\n    const [view, setView] = useState('home');\n    const [student, setStudent] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const fetchStudentData = () => {\n        fetch('/auth')\n            .then(response => response.json())\n            .then(body => {\n                if (!body) return console.log('no response from server');\n                if (!body.success) return console.log('no { success: true } response from server');\n                setStudent(body.student);\n                setIsLoaded(true);\n            });\n    }\n    useEffect(() => {\n        fetchStudentData();\n    }, []);\n    if (!isLoaded) return (\n        <Dashboard>\n            <Loading />\n        </Dashboard>\n    )\n    return (\n        <StudentContext.Provider value={fetchStudentData}>\n            <Dashboard teacher={false}>\n                <Header>\n                    {student.firstName}\n                </Header>\n                <Sidebar>\n                    <div className=\"StudentSidebar\">\n                        <div className=\"avatarContainer\">\n                            <img alt=\"student avatar\" className=\"studentAvatar\" src=\"https://lh3.googleusercontent.com/ImpxcbOUkhCIrWcHgHIDHmmvuFznNSGn2y1mor_hLqpYjI6Q1J7XAVvpR-I24ZOJL3s\" />\n                        </div>\n                        <div className=\"studentCoins\">\n                            <div className=\"coinsIcon\"><img alt=\"coin icon\" src=\"assets/Coin_ico.png\" /></div>\n                            <span className=\"coinsCount\">{student.coins.toString()}</span>\n                        </div>\n                    </div>\n                </Sidebar>\n                <Main view={view} student={student} />\n                <Nav>\n                    <button className=\"stealth link\" onClick={() => setView('home')}>Homework</button>\n                    <button className=\"stealth link\" onClick={() => setView('marketplace')}>Marketplace</button>\n                    <button className=\"stealth link\" onClick={() => setView('badges')}>Badges</button>\n                    <button className=\"stealth link\" onClick={props.logout}>Log out</button>\n                </Nav>\n            </Dashboard>\n        </StudentContext.Provider>\n    )\n}\n\nfunction Main(props) {\n    const { view, student } = props;\n    switch (view) {\n        case 'home': return <Home student={student} />;\n        default: return <Home student={student} />;\n    }\n}\n\nfunction Home(props) {\n    return (\n        <div className=\"Main\">\n            <ViewHomework student={props.student} />\n        </div>\n    )\n}\n\nfunction ViewHomework(props) {\n    const { student } = props;\n    const [homework, updateHomework] = useState(null);\n    const fetchHomework = () => {\n        fetch('/get/homework', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ studentId: student._id })\n        }).then(response => response.json())\n            .then(body => {\n                if (!body) return console.log('no response from server');\n                if (!body.success) return console.log('no { success: true } response from server');\n                updateHomework(body.homework);\n            });\n    }\n    useEffect(fetchHomework, []);\n    const viewHomework = () => {\n        const homeworkModules = [];\n        for (let i = 0; i < homework.length; i++) {\n            homeworkModules.push(<Homework {...homework[i]} />);\n        }\n        return homeworkModules;\n    }\n    return (\n        <HomeworkContext.Provider value={fetchHomework}>\n            <div className=\"ViewHomework\">\n                {homework ? viewHomework() : '...'}\n            </div>\n        </HomeworkContext.Provider>\n    )\n}\n\nfunction Homework(props) {\n    const { _id, date, headline, assignments } = props;\n    const homeworkAssignments = () => {\n        const assignmentsArray = [];\n        for (let i = 0; i < assignments.length; i++) {\n            assignmentsArray.push(<Assignment homeworkId={_id} index={i} {...assignments[i]} />);\n        }\n        return assignmentsArray;\n    }\n    return (\n        <div className=\"Homework\">\n            <div className=\"Header\">\n                <div>\n                    <span className=\"date\">{prettifyDate(date)}</span>\n                    <h3>{headline}</h3>\n                </div>\n            </div>\n            <div className=\"Body\">\n                <ul>\n                    <li className=\"smol\">\n                        <div className=\"label\">Assignments</div>\n                        <div className=\"progress\">Progress</div>\n                    </li>\n                </ul>\n                <ol>\n                    {homeworkAssignments()}\n                </ol>\n            </div>\n        </div>\n    )\n}\n\nfunction Assignment(props) {\n    const { homeworkId } = props;\n    const fetchHomework = useContext(HomeworkContext);\n    const updateHomeworkProgress = (value) => {\n        fetch('/update/progress', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ _id: homeworkId, index: props.index, value })\n        }).then(response => response.json())\n            .then(body => {\n                if (!body) return console.log('no response from server');\n                if (!body.success) return console.log('no { success: true } response from server');\n                fetchHomework();\n                // refresh hw data\n            });\n    }\n    return (\n        <li>\n            <div className=\"label\">{props.label}</div>\n            <div className=\"progress\">\n                <button onClick={props.progress === 0 ? () => {} : () => updateHomeworkProgress(props.progress - 1)}\n                    className={`stealth${props.progress === 0 ? ' disabled' : ''}`}\n                    style={{ visibility: props.recorded ? 'hidden' : 'visible' }}><i className=\"fas fa-minus-circle\"></i></button>\n                <ProgressBar percentage={(100 * props.progress) / 4} />\n                <button onClick={props.progress === 4 ? () => {} : () => updateHomeworkProgress(props.progress + 1)}\n                    className={`stealth${props.progress === 4 ? ' disabled' : ''}`}\n                    style={{ visibility: props.recorded ? 'hidden' : 'visible' }}><i className=\"fas fa-plus-circle\"></i></button>\n                {/*(props.progress > 0) &&\n                    <div className={`coinsEarned${props.recorded ? ' coinsAdded' : ''}`}>\n                        <img className=\"coinIcon\" alt=\"coin icon\" src=\"assets/Coin_ico.png\" />\n                        <span>{`${props.progress * 20}`}</span>\n                    </div>*/}\n            </div>\n        </li>\n    )\n}\n\nfunction ProgressBar(props) {\n    return (\n        <div className=\"ProgressBar\">\n            <div className=\"bar\" style={{ width: props.percentage+'%' }}></div>\n        </div>\n    )\n}\n\nexport default Student;","/Users/ngw/Documents/Sites/Pianopet/client/src/components/Teacher.js",["67"],"/Users/ngw/Documents/Sites/Pianopet/client/src/components/Marketplace.js",[],"/Users/ngw/Documents/Sites/Pianopet/client/src/components/Teacherr.js",["68"],"/Users/ngw/Documents/Sites/Pianopet/client/src/components/ViewStudent.js",["69"],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":93,"column":30,"nodeType":"76","endLine":93,"endColumn":32,"suggestions":"77"},{"ruleId":"74","severity":1,"message":"78","line":18,"column":28,"nodeType":"79","endLine":32,"endColumn":6},{"ruleId":"74","severity":1,"message":"80","line":41,"column":8,"nodeType":"76","endLine":41,"endColumn":40,"suggestions":"81"},{"ruleId":"74","severity":1,"message":"82","line":29,"column":8,"nodeType":"76","endLine":29,"endColumn":21,"suggestions":"83"},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'student._id'. Either include it or remove the dependency array.","ArrayExpression",["86"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'getTeacherData'. Either include it or remove the dependency array.",["87"],"React Hook useEffect has a missing dependency: 'getHomework'. Either include it or remove the dependency array.",["88"],"no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},"Update the dependencies array to be: [student._id]",{"range":"95","text":"96"},"Update the dependencies array to be: [teacher._id, shouldRefreshData, getTeacherData]",{"range":"97","text":"98"},"Update the dependencies array to be: [getHomework, student._id]",{"range":"99","text":"100"},[3572,3574],"[student._id]",[1445,1477],"[teacher._id, shouldRefreshData, getTeacherData]",[1036,1049],"[getHomework, student._id]"]