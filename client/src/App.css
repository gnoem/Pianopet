@import url('https://fonts.googleapis.com/css2?family=Quicksand:wght@300;400;500;600;700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Fredoka+One&display=swap');

@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}
@keyframes invalid-input {
    16.65% {
      -webkit-transform: translateX(8px);
      transform: translateX(8px);
    }
    33.3% {
      -webkit-transform: translateX(-6px);
      transform: translateX(-6px);
      border-color: var(--deep-caution);
    }
    49.95% {
      -webkit-transform: translateX(4px);
      transform: translateX(4px);
      border-color: var(--deep-caution);
    }
    66.6% {
      -webkit-transform: translateX(-2px);
      transform: translateX(-2px);
      border-color: var(--deep-caution);
    }
    83.25% {
      -webkit-transform: translateX(1px);
      transform: translateX(1px);
    }
    100% {
      -webkit-transform: translateX(0);
      transform: translateX(0);
    }
}
@keyframes mobileNavFadeIn {
    0% {
        opacity: 0;
        transform: scale(0.5);
    }
    20% {
        opacity: 0;
    }
    100% {
        opacity: 1;
        transform: scale(1);
    }
}
@keyframes slideUpIn {
    from {
        opacity: 0;
        transform: translate3d(0, 50%, 0);
    }
    to {
        opacity: 1;
        transform: translate3d(0, 0, 0);
    }
}
@keyframes check {
    100% {
        stroke-dashoffset: 0;
    }
}
@keyframes checkmark-shrink {
    100% {
        opacity: 0;
        transform: rotate(45deg) scale(0);
    }
}
@keyframes pulse {
    0% {
        transform: scale(0.6);
    }
    50% {
        transform: scale(1.2);
    }
    100% {
        transform: scale(1);
    }
}

#demo {
    position: fixed;
    bottom: 1rem;
    right: 1rem;
    width: 2rem;
    height: 2rem;
    background: #fff;
    border: 1px solid #ccc;
    cursor: pointer;
    border-radius: 999px;
    z-index: 999999999999999999999999;
}

/* BASIC PAGE STYLE */
* {
    box-sizing: border-box;
}
:root {
    --default-font: 'Quicksand', sans-serif;
    --display-font: 'Fredoka One', sans-serif;
    --light-theme-color: #9299f0;
    --med-theme-color: #7279e4;
    --deep-theme-color: #585fc7;
    --dark-theme-color: #09172F;
    --light-accent-color: #eeeeee;
    --med-accent-color: #FF8772;
    --deep-accent-color: #fc6f56;
    --caution: #ff4343;
    --deep-caution: #ad1b1b;
    --great-success: #0f8604;
    --input-bg: #222F44;
}
html, body {
    font-family: var(--default-font);
    font-size: 16px;
    width: 100%;
    height: 100%;
    margin: 0;
    overflow: hidden;
}
p, h1, h2, h3, h4, h5, h6 {
    margin-top: 0;
}
h1 {
    line-height: normal;
}
a, a:visited, button.link, button.stealth.link {
    font-weight: bold;
    color: var(--light-theme-color);
    text-decoration: none;
    border-radius: 0;
    transition: 0.2s;
}
a:hover, button.link:hover {
    color: var(--med-theme-color);
}
hr {
    border: 0;
    background: rgba(255, 255, 255, 0.5);
    width: 60%;
    height: 1px;
    margin: 2rem auto;
}
@media (max-width: 900px) {
    h1 {
        font-size: 1.7rem;
    }
}

/* UTILS */
.padme {
    padding: 2rem;
}
.nowrap {
    display: inline-block;
    white-space: nowrap;
    padding: 0 0.15em;
}
.smol {
    font-weight: bold;
    font-size: 0.7rem;
    text-transform: uppercase;
}
.tip {
    color: #666;
    font-size: 0.8rem;
}
.flex {
    display: flex;
}
.flex.center {
    align-items: center;
    justify-content: center;
}
.slideUpIn {
    animation: slideUpIn 0.2s 1;
}
.goodbye /* shrinking effect when deleting wearable or badge */ {
    transform-origin: center;
    transform: scale(0.7);
    opacity: 0;
}
ul.stealth {
    list-style: none;
    padding: 0;
}
button.stealth {
    color: inherit;
    background: 0;
    border: 0;
    padding: 0;
    margin: 0;
    border-radius: 0;
}
.coins {
    display: inline-block;
}
.coins::before {
    content: '';
    display: inline-block;
    vertical-align: top;
    width: 1.2em;
    height: 1.2em;
    background: url('assets/Coin_ico.png');
    background-size: cover;
    margin-right: 0.2rem;
}
.formHint {
    display: block;
    font-size: 0.8rem;
    line-height: 1.3;
}
input + .formHint, div.Input + .formHint {
    margin-top: 0.5rem;
}
.formHint + div {
    margin-top: 1.5rem;
}

/* FORMS - LABELS, INPUTS, BUTTONS */
form.divide > div.half {
    width: 100%;
    display: grid;
    grid-template-columns: repeat(2, calc(50% - 0.5rem)); /* annoying that grid gap isn't included in total width */
    column-gap: 1rem;
    margin-bottom: 1.5rem;
}
label {
    font-weight: bold;
    font-size: 0.7rem;
    text-transform: uppercase;
    display: block;
    text-align: left;
    line-height: 0.7rem;
    margin-bottom: 0.5rem;
    user-select: none;
}
input + label, span + label, div + label {
    margin-top: 1.5rem;
}
input, select, textarea, button {
    font-family: inherit;
    font-size: inherit;
    outline: none;
    transition: 0.2s;
}
input[type=submit], button, input[type=range] {
    cursor: pointer;
}
input[type=color] {
    width: 2rem;
    height: 2rem;
    background: #fff;
    border: 0;
}
input[type=text], input[type=number], input[type=password], input[type=date] {
    background: var(--input-bg);
    border: 1px solid transparent;
    border-radius: 0.5rem;
    color: #fff;
    padding: 0 0.5rem;
    overflow: visible;
    display: block;
    width: 100%;
    height: 3rem;
}
input[type=text]:focus, input[type=number]:focus, input[type=password]:focus, input[type=date]:focus {
    border-color: var(--med-theme-color);
}
input[type=submit], button {
    border: 0;
    background: var(--deep-theme-color);
    font-weight: bold;
    color: #fff;
    padding: 0.7rem 1.5rem;
    border-radius: 999px;
    line-height: 1.5rem;
}
input:disabled {
    cursor: not-allowed;
}
input[type=text]:disabled {
    color: #aaa;
}
input[type=submit]:disabled, button:disabled {
    background: var(--input-bg);
}
span.error {
    color: var(--caution);
    display: block;
    font-weight: 500;
    font-size: 0.8rem;
}
span.error::before {
    content: '\f071';
    font: 900 1em 'Font Awesome 5 Free';
    margin-right: 0.2rem;
}
button.secondary {
    font-size: 0.8rem;
    text-transform: uppercase;
    padding: 0.2rem 0.6rem;
    border-radius: 0.5rem;
}
button.greyed {
    background: #aaa;
}
.buttons {
    margin-top: 1.5rem;
    text-align: center;
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 1rem;
}
.buttons svg /* loading icon */ {
    height: 2.65rem;
}
button.add::before {
    content: '\f067';
    font: 900 1em 'Font Awesome 5 Free';
}
button.successAnimation svg {
    fill: none;
    stroke: #fff;
    stroke-width: 2px;
    stroke-dasharray: 2rem;
    stroke-dashoffset: 2rem;
    height: 100%;
    transform-origin: center right;
    transform: rotate(45deg) scale(1); /* translate3d(-25%, -25%, 0); */
    animation: 1s check 1 forwards, 0.5s checkmark-shrink 1 forwards 1s;
}
button.loadingAnimation svg {
    height: 1.5rem;
}
button.loadingAnimation svg * {
    fill: #fff;
}
@media (max-width: 900px) {
    form.divide > div.half {
        display: block;
        margin-bottom: 1rem;
    }
    div.half > div + div {
        margin-top: 1rem;
    }
    .buttons button {
        padding: 0.3rem 1rem;
    }
}

/* CUSTOM INPUT */
.Input + .Input {
    margin-top: 1.5rem;
}
.Input > div {
    position: relative;
}
.Input input.nope {
    animation: 0.5s invalid-input 1;
}
.Hint {
    position: absolute;
    top: 0;
    right: 0.7rem;
    height: 100%;
    z-index: 500;
}
.Hint span.icon {
    position: absolute;
    top: 50%;
    right: 0;
    transform: translate3d(0, -50%, 0);
    width: 1.5rem;
    height: 1.5rem;
    border-radius: 999px;
    display: grid;
    place-items: center;
    animation: 0.2s fadeIn 1;
    cursor: pointer;
    border: 1px solid #fff;
}
.Hint span.icon i {
    margin: -1px 0 0 -0.5px; /* to offset 1px border */
    color: #fff;
    font-size: 0.7rem;
}
.Hint span.message {
    position: absolute;
    top: 100%;
    right: 0;
    margin-top: -0.3rem;
    font-size: 0.8rem;
    font-weight: 500;
    white-space: nowrap;
    border: 1px solid #fff;
    padding: 0.3rem 0.6rem;
    border-radius: 0.5rem;
    border-top-right-radius: 0;
    opacity: 0;
    transition: 0.2s;
}
.Hint.error span {
    background: var(--deep-caution);
}
.Hint.success span {
    background: var(--great-success);
}

/* MAIN APP + DASHBOARD STRUCTURE */
#root {
    width: 100%;
    height: 100%;
}
.App {
    position: relative;
    width: 100%;
    height: 100%;
    background: var(--dark-theme-color);
    overflow: hidden;
}
.Dashboard {
    display: grid;
    width: 100%;
    height: 100%;
    overflow: hidden;
    grid-template: auto 1fr / auto 1fr;
    grid-template-areas:
        'logo header'
        'sidebar main';
    line-height: 1.5rem;
}
.Header, .Logo {
    background: var(--med-accent-color);
    color: var(--dark-theme-color);
    padding: 2rem;
}
.Logo {
    grid-area: logo;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 1rem 2rem;
}
.Logo img {
    width: auto;
    height: 3.5rem;
    cursor: pointer;
}
.Header {
    grid-area: header;
    display: flex;
    align-items: center;
    justify-content: flex-end;
}
.User {
    grid-area: user;
    color: var(--dark-theme-color);
    display: flex;
    align-items: center;
    justify-content: flex-end;
    position: relative;
}
.User > button {
    background: 0;
    padding: 0;
    color: #333;
    font-weight: 500;
    display: flex;
    align-items: center;
}
.User span.caret::after {
    content: '\f107';
    font: 900 1em 'Font Awesome 5 Free';
    transition: 0.2s;
    margin-left: 1rem;
    display: block;
}
.User.expanded span.caret::after {
    transform: rotate(180deg);
}
.User div.pfp {
    display: flex;
    align-items: center;
    justify-content: center;
    margin-left: 1rem;
}
.User div.pfp img {
    width: 2.5rem;
    height: 2.5rem;
    object-fit: cover;
    object-position: center center;
    border-radius: 999px;
    border: 3px solid #fff;
    cursor: pointer;
}
.User .ContextMenu {
    position: absolute;
    z-index: 999;
    top: 100%;
    right: 3.5rem;
    white-space: nowrap;
    transition: 0.2s;
    transform-origin: top right;
    transform: scale(0.5);
    opacity: 0;
    pointer-events: none;
}
.User.expanded .ContextMenu {
    pointer-events: all;
    transform: scale(1);
    opacity: 1;
}
.User .ContextMenu button {
    padding: 0.5rem;
    padding-right: 0.2rem;
    line-height: 1.5rem;
    display: flex;
    justify-content: space-between;
}
.User .ContextMenu button::before {
    font: 900 1.1rem 'Font Awesome 5 Free';
    line-height: inherit;
    display: inline-block;
    margin-right: 1.5rem;
}
.User .ContextMenu button.myAccount::before {
    content: '\f2bd';
}
.User .ContextMenu button.addStudents::before {
    content: '\f234';
}
.User .ContextMenu button.settings::before {
    content: '\f013';
}
.User .ContextMenu button.logout::before {
    content: '\f2f5';
}
.Sidebar, .Main {
    padding: 2rem;
}
.Sidebar {
    grid-area: sidebar;
    color: #fff;
    padding-left: 3rem;
}
.Main {
    grid-area: main;
    color: #fff;
    overflow-y: auto;
}
.Student.Dashboard .Main {
    padding-right: 25%;
}
.Teacher.Dashboard .Main {
    padding: 2rem 4rem 0 2rem;
}
.Nav {
    grid-area: nav;
    display: flex;
    justify-content: flex-end;
    margin-right: 4rem;
}
.Nav button {
    padding: 0;
    background: 0;
    margin: 0;
    text-transform: uppercase;
    color: var(--dark-theme-color);
}
.Nav button:hover {
    color: #000;
}
.Nav button + button {
    margin-left: 3rem;
}
@media (max-width: 900px) {
    .Dashboard {
        grid-template: 12.5% 75% 12.5% / auto 1fr;
        grid-template-areas:
            'logo header'
            'main main'
            'sidebar sidebar';
    }
    .Logo {
        padding: 0;
        height: 100%;
    }
    .Logo img {
        height: 100%;
        padding: 0.2rem;
    }
    .Header {
        padding: 1rem;
        justify-content: space-between;
        position: relative;
        box-shadow: 0 0 1rem rgba(0, 0, 0, 0.2);
    }
    .Header .navContainer {
        position: absolute;
        top: 100%;
        right: 0;
        width: 100%;
        height: 100vh; /* closing transition stops working if a height isn't specified */
        max-height: 0;
        z-index: 100;
        background: var(--med-accent-color);
        transition: 0.2s;
        will-change: max-height;
    }
    .navContainer > * {
        animation: 0.3s mobileNavFadeIn 1;
    }
    .Nav {
        flex-direction: column;
        margin: 0;
        justify-content: flex-start;
    }
    .Nav button, .Nav button + button {
        margin: 0;
        line-height: 2;
        font-size: 1.5rem;
        font-weight: 400;
    }
    .User {
        padding: 2rem;
    }
    .User .ContextMenu {
        top: calc(100% - 1.5rem); /* to account for bottom padding on .User */
        right: 5.5rem; /* 3.5rem plus 2rem padding on .User */
    }
    .Sidebar, .Main, .Student.Dashboard .Main {
        padding: 1.5rem;
    }
    .Sidebar {
        z-index: 999;
        background: #fff;
        box-shadow: 0 0 1rem rgba(0, 0, 0, 0.2);
        padding: 0;
        display: flex;
        align-items: center;
    }
}

/* LOGIN + SIGNUP PAGES */
.Guest {
    width: 100%;
    height: 100%;
    display: grid;
    grid-template-columns: 1fr 3fr;
    color: #fff;
    overflow: hidden;
}
.Guest > div {
    padding: 3rem;
}
.Guest > div:first-of-type {
    background: var(--med-accent-color);
    text-align: right;
}
.Guest > div:first-of-type img {
    width: 80%;
}
.Guest > div:nth-of-type(2) {
    background: var(--dark-theme-color);
    overflow: auto;
}
.Guest > div:nth-of-type(2) > div {
    width: 50%;
    text-align: left;
}
.Guest > div:nth-of-type(2) > div.Signup {
    width: 70%;
}
.Guest label {
    text-align: left;
}
form.pad input[type=text], form.pad input[type=password] {
    margin-bottom: 1rem;
}
.Guest span.error {
    text-align: left;
    margin-top: -0.5rem;
    margin-bottom: 1rem;
}
.Guest input[type=submit] {
    margin: 2rem 0 1.5rem;
}
.Guest button.portalLink {
    position: fixed;
    bottom: 2rem;
    right: 2rem;
    display: inline-block;
    padding: 0.3rem 1rem;
    border-radius: 0.5rem;
    background: 0;
    border: 1px solid #fff;
}
@media (max-width: 900px) {
    .Guest {
        grid-template: 12.5% 1fr / 100%;
    }
    .Guest > div:first-of-type {
        text-align: center;
        padding: 1rem;
    }
    .Guest > div:first-of-type img {
        width: auto;
        height: 100%;
    }
    .Guest > div:nth-of-type(2) {
        padding: 2rem;
    }
    .Guest > div:nth-of-type(2) > div {
        width: 100%;
        text-align: center;
    }
    .Guest button.portalLink {
        position: static;
        margin-top: 2rem;
    }    
}

/* AVATAR */
.avatarContainer {
    font-size: 0;
    line-height: 0;
    background: var(--med-accent-color);
    padding: 0.5rem;
    border-radius: 999px;
    margin: 0 auto 2rem;
    position: relative;
}
.avatarContainer::before {
    content: '';
    display: block;
    width: 0.5rem;
    height: 2rem;
    background: inherit;
    position: absolute;
    bottom: 100%;
    left: 50%;
    margin-left: -0.25rem;
}
.studentAvatar, .Avatar {
    background: #fff;
    padding: 0.5rem;
    border: 3px solid var(--dark-theme-color);
    border-radius: 999px;
    overflow: hidden;
    text-align: center;
}
.avatarBox {
    width: 12rem;
    height: 12rem;
    position: relative;
}
.Student.Dashboard .avatarBox {
    cursor: pointer;
}
.Avatar .previewBase {
    width: 100%;
    height: 100%;
}
.Avatar .avatarItem {
    position: absolute;
}
.Teacher.Dashboard .studentAvatar {
    width: 12rem;
    height: 12rem;
}
.previewBase path {
    transition: 0.2s;
}
.previewBase .st1 {
    fill: #fff;
}
.previewBase .st2 {
    fill: #111;
}
.previewBase.zoom path {
    transform: scale(2.3);
    transform-origin: center;
}
@media (max-width: 900px) {
    .avatarContainer {
        position: absolute;
        bottom: 0;
        left: 0;
        transform: translate3d(-15%, 15%, 0);
        margin: 0;
        box-shadow: 0 0 1rem rgba(0, 0, 0, 0.2);
    }
    .avatarContainer::before {
        display: none;
    }
    .avatarContainer .Avatar {
        border-bottom-left-radius: 0;
    }
    .avatarBox {
        width: 40vw;
        height: 40vw;
    }
}

/* STUDENT SIDEBAR */
.StudentSidebar {
    text-align: center;
}
.StudentStats {
    display: grid;
    column-gap: 0.5rem;
    grid-template-rows: auto auto;
    grid-template-columns: auto 1fr auto;
}
.StudentStats + .StudentStats {
    margin-top: 0.5rem;
}
.StudentStats .statsIcon {
    display: flex;
    align-self: center;
    justify-self: end;
    grid-row: 1 / 2;
    grid-column: 1 / 2;
}
.StudentStats .statsLabel {
    display: flex;
    align-self: center;
    justify-self: start;
    grid-row: 1 / 2;
    grid-column: 2 / 3;
}
.studentStats {
    display: inline-grid;
    gap: 0.5rem;
    grid-template: auto / auto 1fr;
    align-items: center;
    justify-items: start;
}
img.statsIcon {
    width: 2rem;
    height: auto;
}
.statsLabel {
    font-weight: bold;
}
.Student.Dashboard .statsLabel {
    cursor: pointer;
}
.editCoinsButton {
    display: flex;
    align-self: center;
    grid-row: 1 / 2;
    grid-column: 3 / -1;
}
.StudentStats button + button {
    margin-left: 0.5rem;
}
.confirmChangesButton {
    margin-top: 0.5rem;
    display: flex;
    justify-self: center;
    grid-row: 2 / -1;
    grid-column: 1 / -1;
}
@media (max-width: 900px) {
    .StudentSidebar {
        padding-left: calc(40vw + (0.2 * 40vw) - 0.5rem); /* based on width/translation of .avatarBox */
    }
    img.statsIcon {
        width: 1.3rem;
        height: auto;
    }
    .statsLabel {
        font-size: 0.9rem;
        color: var(--dark-theme-color);
    }
}

/* HOMEWORK & STATS */
.ViewStudent {
    width: 100%;
    height: 100%;
    display: grid;
    grid-template: auto / 1fr auto;
    grid-template-areas: 'main sidebar';
}
.viewStudentMain {
    grid-area: main;
    overflow: auto;
    padding-right: 2rem;
}
.viewStudentSidebar {
    grid-area: sidebar;
    margin-left: 2rem;
}
.viewStudentHeader {
    display: flex;
    justify-content: space-between;
    grid-row: 1 / 2;
    grid-column: 1 / 2;
}
.viewStudentHeader h1 {
    color: #fff;
    margin-bottom: 0;
}
.viewStudentHeader button {
    font-size: 1.5rem;
    color: var(--deep-theme-color);
    transition: color 0.2s;
    margin-left: 1rem;
}
.viewStudentHeader button:hover {
    color: var(--light-theme-color);
}
.teacherCode {
    text-align: center;
}
.addHomeworkForm {
    text-align: center;
}
.addHomeworkForm h2 {
    text-align: left;
    margin-bottom: 2rem;
}
.addHomeworkFform label {
    padding-bottom: 0.4rem;
    border-bottom: 1px solid #ccc;
}
.addHomeworkForm li {
    display: grid;
    grid-template-columns: auto 1fr;
    column-gap: 0.5rem;
    list-style: none;
    place-items: center;
    padding: 0;
    margin-bottom: 0.5rem;
}
.addHomework {
    display: grid;
    column-gap: 0.5rem;
    row-gap: 1rem;
    grid-template-rows: auto 1fr;
    grid-template-columns: auto 1fr;
    grid-template-areas:
        'date headline'
        'assignments assignments';
    margin-bottom: 0.5rem;
}
.addHomework .addHomeworkDate {
    grid-area: date;
}
.addHomework .addHomeworkHeadline {
    grid-area: headline;
}
.addHomework .addHomeworkAssignments {
    grid-area: assignments;
}
.ViewHomework {
    margin: 2rem 0;
}
.Homework {
    display: grid;
    grid-template-rows: auto 1fr;
    grid-template-areas: 
        'header'
        'body';
    background: #fff;
    color: #000;
    border-radius: 1rem;
    overflow: hidden;
}
.Homework + .Homework {
    margin-top: 2rem;
}
.Homework .homeworkHeader {
    background: var(--light-accent-color);
    padding: 1rem 1.5rem;
    padding-right: 1.5rem;
    display: flex;
    justify-content: space-between;
}
.Homework .homeworkBody {
    padding: 1rem;
}
.Homework h3 {
    margin-bottom: 0;
}
.Homework span.date {
    font-size: 0.8rem;
}
.Homework .homeworkHeader div.options {
    position: relative;
    display: flex;
    align-content: center;
}
.Homework .homeworkHeader div.options .ContextMenu {
    position: absolute;
    top: 0;
    right: 100%;
    margin-right: 1rem;
}
.Homework .homeworkHeader div.options > button {
    font-size: 1.5rem;
    color: #aaa;
}
.Homework .homeworkHeader div.options > button:hover {
    color: #666;
}
.Homework .homeworkBody ul {
    list-style: none;
    display: flex;
    margin: 0;
    padding: 0;
}
.Homework .homeworkBody li {
    width: 100%;
}
.Homework .homeworkBody ul li {
    display: flex;
    align-items: center;
    gap: 3rem; /* 1rem gap between ol li + 1rem left padding on ol */
}
.Homework .homeworkBody ul li > div {
    font-weight: bold;
    font-size: 0.7rem;
    text-transform: uppercase;
}
.Homework .homeworkBody ul li > div:first-of-type {
    width: 60%;
    padding-left: 0.3rem;
}
.Homework .homeworkBody ul li > div:nth-of-type(2) {
    width: 40%;
}
.Homework ol {
    margin: 0;
    margin-bottom: 0.5rem;
    padding-left: 2rem;
}
.Homework ol li {
    margin-top: 0.5rem;
    line-height: 1.3;
}
.Homework ol li > div {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 1rem;
}
.Homework ol li > div > div {
    width: 50%;
}
.Homework ol li > div > div:first-of-type {
    width: 60%;
    padding: 0 0.2rem;
}
.Homework ol li > div > div:nth-of-type(2) {
    width: 40%;
}
.Homework .progress {
    display: grid;
    grid-template-columns: auto 1fr auto;
    place-items: center;
    column-gap: 0.5rem;
    margin-right: 1rem;
}
.Homework .progress button {
    display: inline-block;
    vertical-align: middle;
    font-size: 1.3rem;
    color: var(--deep-theme-color);
}
.Homework .progress button.disabled {
    cursor: not-allowed;
    color: #aaa;
}
.ProgressBar {
    display: inline-block;
    vertical-align: middle;
    width: 100%;
    height: 0.5rem;
    background: #eee;
    border-radius: 999px;
}
.ProgressBar .bar {
    background: var(--deep-theme-color);
    height: 100%;
    border-radius: 999px;
}
.Homework .coinsEarned {
    display: inline-flex;
    vertical-align: middle;
    place-items: center;
    margin-left: 0.5rem;
    color: #aaa;
    cursor: pointer;
}
.Homework .coinsEarned .coinIcon {
    height: 1rem;
    margin-right: 0.2rem;
    margin-left: 0.5rem;
    filter: grayscale(100%);
}
.Homework .coinsEarned.coinsAdded {
    color: inherit;
    cursor: default;
}
.Homework .coinsEarned.coinsAdded .coinIcon {
    filter: none;
}
@media (max-width: 900px) {
    .ViewHomework {
        margin: 1rem 0 calc(12.5vh - 2rem); /* 12.5vh is height of bottom bar, 2rem is padding on .Main */
    }
    .Homework + .Homework {
        margin-top: 1.5rem;
    }
    .Homework .homeworkHeader {
        padding: 0.5rem 1rem;
    }
    .Homework .homeworkBody {
        padding: 0.5rem;
    }
    .Homework h3 {
        font-size: 1rem;
    }
    .Homework .homeworkBody ul li {
        gap: 2rem; /* 1rem gap between ol li + 1rem left padding on ol */
    }
    .Homework ol {
        padding-left: 1.5rem;
        font-size: 0.9rem;
    }
    .Homework ul li > div:nth-of-type(n),
    .Homework ol li > div > div:nth-of-type(n) { /* at least im not using !important */
        width: 50%;
    }
    .Homework .progress {
        margin-right: 0.5rem;
    }
    .Homework .progress button {
        font-size: 0.9rem;
    }
}

/* MARKETPLACE & CLOSET */
.Marketplace, .Closet {
    margin: 2rem 0;
    background: #fff;
    height: 25rem;
    display: grid;
    border-radius: 1rem;
    overflow: hidden;
}
.Marketplace {
    grid-template: auto 1fr / 15rem 1fr;
    grid-template-areas:
        'preview nav'
        'preview items';
}
.Closet {
    grid-template: auto 1fr / 100%;
    grid-template-areas:
        'nav'
        'items';
}
.Marketplace .marketplacePreview {
    grid-area: preview;
    border-right: 1px solid #666;
    display: grid;
    grid-template-rows: 15rem 1fr;
    overflow: hidden;
}
.previewBox {
    position: relative;
}
.previewBox .previewBase {
    width: 100%;
    height: 100%;
}
.previewBox .previewWearable {
    position: absolute;
}
.marketplacePreview > ul {
    border-top: 1px solid #ccc;
    list-style: none;
    font-size: 0.8rem;
    line-height: 1;
    margin: 0;
    padding: 1rem;
    background: #f7f7f7;
    color: #666;
    overflow: auto;
}
.marketplacePreview > ul h3 {
    margin-bottom: 0.5rem;
}
.marketplacePreview > ul li {
    padding: 0;
    display: grid;
    grid-template-columns: 1fr auto;
    align-items: center;
    column-gap: 0.5rem;
}
.marketplacePreview > ul li + li {
    margin-top: 0.5rem;
}
.marketplacePreview > ul span.owned::before {
    content: '\f00c';
    font: 900 1em 'Font Awesome 5 Free';
    line-height: 1.4rem;
}
.marketplacePreview > ul button {
    padding: 0 0.3rem;
    line-height: 1.4rem;
    border-radius: 0.3rem;
    font-size: 0.7rem;
}
.marketplacePreview > ul button img.coin, .marketplacePreview > ul button span {
    display: inline-block;
    vertical-align: middle;
}
.marketplacePreview > ul img.coin {
    width: auto;
    height: 1rem;
    margin-right: 0.3rem;
}
.Modal .marketplacePreview > ul {
    border: 1px solid #ccc;
    border-radius: 0.5rem;
}
.Modal .marketplacePreview > ul h3 {
    display: none;
}
.wearableCategories {
    grid-area: nav;
    padding: 0.5rem;
    background: var(--light-theme-color);
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
}
.wearableCategories button {
    flex: 1 0 auto;
    margin: 0;
    border: 0;
    padding: 0.5rem 1rem;
    border-radius: 999px;
    background: #fff;
    color: var(--deep-theme-color);
    line-height: 1.2rem;
}
.wearableCategories button.add {
    flex-grow: 0;
    padding: 0.5rem;
    width: 1.2rem;
    height: 1.2rem;
    box-sizing: content-box;
    display: inline-grid;
    place-items: center;
}
.wearableCategories button.add::before {
    line-height: 1.2rem;
}
.wearablesList {
    grid-area: items;
    padding: 1rem;
    overflow-y: auto;
}
.wearablesList > div {
    display: grid;
    grid-template-columns: repeat(auto-fill, 7rem);
    gap: 1rem;
}
.wearablesList > div.blobs {
    grid-template-columns: repeat(auto-fill, 5rem);
}
.wearablesList > div.blobs > button > svg {
    width: 100%;
    height: auto;
}
.wearablesList > div.blobs > button.add::before {
    content: '\f055';
    font-size: 2rem;
    color: #ccc;
}
.wearablesList > div > button {
    margin: 0;
    background: 0;
    padding: 0.5rem;
    text-align: center;
    border: 1px solid #ddd;
    border-radius: 0.5rem;
    color: #333;
    font-size: 0.75rem;
    transition: 0.2s;
    position: relative;
}
.wearablesList > div > button.owned {
    opacity: 0.4;
}
.wearablesList > div > button.owned:hover {
    opacity: 1;
}
.wearablesList > div > button.owned::before {
    content: '\f00c';
    font: 900 0.8em 'Font Awesome 5 Free';
    position: absolute;
    top: 0.5rem;
    right: 0.5rem;
    transform: 0.2s;
}
.wearablesList > div > button.owned::after {
    content: '\f00c';
    font: 900 0.6em 'Font Awesome 5 Free';
    color: #fff;
    background: var(--light-theme-color);
    width: 0.8125rem;
    height: 0.8125rem;
    border-radius: 999px;
    line-height: 0.8125rem;
    position: absolute;
    top: 0.2rem;
    right: 0.2rem;
    display: none;
}
.wearablesList > div > button.owned span.wearableValue,
.wearablesList > div > button.owned img.coin {
    filter: grayscale();
}
.wearablesList > div > button.active {
    border-color: #000;
}
.wearablesList > div > button img {
    width: 4rem;
    height: auto;
}
.wearablesList > div > button > span:nth-of-type(1) {
    display: block;
    font-weight: 600;
    color: #666;
    line-height: 1;
    margin: 0.2rem 0;
}
.wearablesList > div > button > span:nth-of-type(2) > * {
    display: inline-block;
    vertical-align: middle;
}
.wearablesList > div > button > span:nth-of-type(2) > img {
    width: auto;
    height: 1.5em;
    margin-right: 0.3rem;
}
.viewCart {
    text-align: right;
    margin-top: 1rem;
}
.viewCart button {
    padding: 0;
    margin: 0;
    width: 2.5rem;
    height: 2.5rem;
    border-radius: 999px;
    display: inline-grid;
    place-items: center;
    position: relative;
}
.viewCart button span {
    position: absolute;
    bottom: -0.2rem;
    right: -0.2rem;
    background: var(--deep-caution);
    width: 1rem;
    height: 1rem;
    color: #fff;
    border-radius: 999px;
    font-size: 0.7rem;
    line-height: calc(1rem - 2px); /* to account for 1px border */
    text-align: center;
    border: 1px solid #fff;
}
@media (max-width: 900px) {
    .Marketplace, .Closet {
        margin: 0;
        height: calc(50vh - 1rem); /* todo better */
    }
    .Marketplace {
        grid-template-areas:
            'nav nav'
            'items items';
    }
    .Closet + .buttons {
        text-align: right;
    }
    .wearableCategories button {
        font-size: 0.8rem;
        padding: 0.3rem 0.6rem;
    }
    .wearablesList {
        padding: 0.7rem;
    }
    .wearablesList > div {
        grid-template-columns: repeat(auto-fill, minmax(5rem, auto));
        gap: 0.7rem;
    }
    .wearablesList > div.blobs {
        grid-template-columns: repeat(auto-fill, minmax(4rem, auto));
    }
    .wearablesList > div > button img {
        width: 3rem;
    }
}

/* ADD + EDIT COLOR */
.colorPicker {
    display: grid;
    grid-template-columns: auto 1fr auto;
    align-items: center;
    margin-top: 1.5rem;
    column-gap: 1rem;
}
.colorPicker > div:first-of-type {
    position: relative;
    width: 3.5rem;
    height: 3.5rem;
    display: flex;
    align-items: center;
}
.colorPicker > div:first-of-type > input,
.colorPicker > div:first-of-type > span {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
}
.colorPicker > div:first-of-type > span {
    cursor: pointer;
}

/* ADD+EDIT WEARABLE FORM (DRAG&DROP) */
.addWearableForm {
    display: grid;
    grid-template-columns: 1fr auto;
    column-gap: 1rem;
}
.addWearableForm .previewBox {
    border: 1px solid #ddd;
}
.addWearableForm .previewBox > div {
    width: 14rem;
    height: 14rem;
    position: relative;
    overflow: hidden;
}
.addWearableForm .previewBox > div .previewBase {
    width: 100%;
    height: 100%;
}
.addWearableForm .previewBox > div .draggable {
    position: absolute;
    top: 0;
    left: 0;
    cursor: grab;
}
.addWearableForm .previewBox > div .draggable.dragging {
    cursor: grabbing;
}
.addWearableForm input[type=range] {
    margin: 0.5rem auto 0;
    display: block;
}

/* BADGES */
.BadgeList {
    margin: 2rem 0;
    display: flex;
}
.badgeItem {
    flex: 0 0 3.5rem;
    margin: 0 1rem;
    transition: 0.2s;
    text-align: center;
}
.badgeItem img.badgeImage {
    display: block;
    width: 3.5rem;
    margin: auto;
    margin-bottom: 0.5rem;
    cursor: pointer;
}
.StudentBadges .badgeItem img.badgeImage {
    cursor: default;
}
.badgeItem span {
    font-size: 0.8rem;
    line-height: 130%;
}
.badgeItem img.coin {
    width: auto;
    height: 1em;
    padding-right: 0.3rem;
}
.badgeItem span.badgeValue, .badgeItem img.coin {
    vertical-align: middle;
    display: inline-block;
}
.StudentBadges .badgeItem span.badgeValue, .StudentBadges .badgeItem img.coin {
    cursor: pointer;
}
.badgeItem span.badgeName {
    display: block;
    font-weight: bold;
}
.badgeItem.redeemed img.coin {
    filter: grayscale();
}
.badgeItem.redeemed span.badgeValue {
    text-decoration: line-through;
}
.badgeItem.redeemed span.badgeValue, .badgeItem.redeemed img.coin {
    cursor: default;
}

/* ACCOUNT SETTINGS */
.Dashboard .Main.MyAccount {
    padding-bottom: 4rem;
}
.MyAccount form {
    margin-top: 2rem;
}
.MyAccount div.profilePic {
    display: grid;
    grid-template-columns: auto 1fr;
    align-items: center;
    column-gap: 1rem;
    margin-bottom: 1.5rem;
}
.MyAccount div.profilePic img {
    width: 5rem;
    height: 5rem;
    border-radius: 999px;
    border: 3px solid #fff;
    object-fit: cover;
}

/* LOADING ICON */
.Loading {
    display: grid;
    width: 100%;
    height: 100%;
    place-items: center;
}
.Loading.mini svg {
    width: auto;
    height: 100%;
}

/* MODAL */
.Modal {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
    z-index: 9999999;
    color: #000;
    opacity: 0;
    transition: 0.2s;
}
.modalContainer {
    display: grid;
    height: 100%;
    padding: 2rem 0;
}
.modalContent {
    width: 55%;
    min-width: 300px;
    background: #fff;
    padding: 2.5rem;
    border-radius: 1rem;
    position: relative;
    margin: auto;
    opacity: 0;
    transform: scale(0.8);
    transition: 0.2s;
}
.Modal.active {
    opacity: 1;
}
.Modal.active .modalContent {
    transform: scale(1);
    opacity: 1;
}
.modalBox.hasImage, .modalBox .hasImage {
    display: grid;
    grid-template: auto / 1fr minmax(auto, 5rem); 
    column-gap: 1rem;
}
.modalBox .hasImage p:last-of-type {
    margin: 0;
}
.modalBox.hasImage img, .modalBox .hasImage img {
    width: 100%;
    height: auto;
}
.Modal button.exit {
    position: absolute;
    top: 1.5rem;
    right: 1.5rem;
    font-size: 1.5rem;
    color: #666;
    background: 0;
}
.Modal input[type=text], .Modal input[type=number], .Modal input[type=date] {
    border-color: #ddd;
    color: #000;
    background: #fff;
}
.Modal input[type=text]:focus, .Modal input[type=number]:focus, .Modal input[type=date]:focus {
    border-color: var(--med-theme-color);
}
/* .Modal button:not(.greyed):not(.exit), .Modal input[type=submit] {
    background: var(--med-theme-color);
} */
@media (max-width: 900px) {
    .modalContent {
        padding: 1.5rem;
        font-size: 0.9rem;
    }
    .modalBox.hasImage, .modalBox .hasImage {
        grid-template: auto / 1fr minmax(auto, 3rem);
    }
}

/* CONTEXT MENU */
.ContextMenu {
    position: fixed;
    z-index: 999;
    background: #fff;
    padding: 0 0.4rem;
    box-shadow: 0 0 1rem rgba(0, 0, 0, 0.3);
    border-radius: 0.5rem;
}
.ContextMenu ul, .ContextMenu li {
    list-style: none;
    margin: 0;
    padding: 0;
}
.ContextMenu button {
    margin: 0;
    background: 0;
    border: 0;
    border-radius: 0;
    padding: 0.5rem 0.2rem;
    padding-right: 1.5rem;
    display: block;
    width: 100%;
    text-align: left;
    color: #666;
    font-size: 0.8rem;
    transition: 0.2s;
}
.ContextMenu button:hover {
    color: #999;
}
.ContextMenu li + li {
    border-top: 1px solid #ddd;
}
.ContextMenu ul.editDelete button {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.2rem;
}
.ContextMenu ul.editDelete button::after {
    font: 900 1em 'Font Awesome 5 Free';
    margin-left: 1.5rem;
}
.ContextMenu ul.editDelete li:last-child button::after {
    content: '\f1f8';
}
.ContextMenu ul.editDelete li:first-child button::after {
    content: '\f304';
}

/* DROPDOWN */
.Dropdown {
    position: relative;
    display: inline-block;
    text-align: left;
}
.dropdownDisplay {
    border: 1px solid #ddd;
    border-radius: 0.5rem;
    display: inline-block;
    padding: 0.3rem 0.6rem;
    padding-right: 3rem;
    transition: 0.2s;
    position: relative;
    z-index: 200;
    background: #fff;
    width: 100%;
}
.dropdownDisplay::after {
    font: 900 1em 'Font Awesome 5 Free';
    content: '\f0d9';
    position: absolute;
    top: 50%;
    right: 0.7rem;
    transform: translate3d(0, -50%, 0);
    transition: 0.2s;
}
.Dropdown.expanded .dropdownDisplay {
    border-radius: 0.5rem 0.5rem 0 0;
}
.Dropdown.expanded .dropdownDisplay::after {
    transform: translate3d(0, -50%, 0) rotate(-90deg);
}
.dropdownDisplay, .dropdownList button {
    color: #666;
    font-weight: 400;
    font-size: 1rem;
    cursor: pointer;
    line-height: 1.5;
}
.dropdownList, .dropdownList li {
    list-style: none;
    margin: 0;
    padding: 0;
}
.dropdownList {
    background: #fff;
    transition: 0.2s;
    overflow: hidden;
    position: absolute;
    z-index: 150;
    top: calc(100% - 0.5rem);
    left: 0;
    width: 100%;
    border-radius: 0 0 0.5rem 0.5rem;
    border: 1px solid #ddd;
    border-top: 0;
}
.Dropdown.expanded .dropdownList {
    margin-top: 0.5rem;
}
.dropdownList li + li {
    border-top: 1px solid #ddd;
}
.dropdownList button {
    background: #fff;
    padding: 0.3rem 0.6rem;
    margin: 0;
    display: block;
    width: 100%;
    text-align: left;
    border-radius: 0;
    color: #666;
}
.dropdownList button:hover {
    background: #f7f7f7;
}
.addNew.active {
    cursor: default;
    position: relative;
}
.addNew.active:hover {
    background: #fff;
}
.addNew input, form.pad .addNew input {
    border: 0;
    padding: 0;
    line-height: 1.5;
    margin-bottom: 0;
    height: auto;
}
.addNew .inputHint {
    content: 'Press Enter to submit, Esc to cancel';
    top: 100%;
    left: 0;
    width: 100%;
    font-size: 0.7rem;
    font-weight: 500;
    color: #666;
    line-height: normal;
    display: block;
    margin-top: 0.2rem;
}

/* CHECKBOX */
.checkboxContainer {
    display: flex;
    column-gap: 1rem;
    row-gap: 0.5rem;
    flex-wrap: wrap;
    margin-bottom: 1rem;
}
.Checkbox {
    display: flex;
    gap: 0.4rem;
    align-items: center;
}
.Checkbox label {
    font-weight: normal;
    font-size: 0.9rem;
    margin: 0;
    text-transform: none;
    line-height: 1.3;
}
.checkboxElement {
    position: relative;
    width: 1rem;
    height: 1rem;
    border-radius: 999px;
    cursor: pointer;
}
.checkboxElement span.svg {
    transform: translate3d(0,0,0) scale(1);
    position: absolute;
    width: 100%;
    height: 100%;
    border-radius: 999px;
    border: 1px solid #ddd;
    background: #fff;
    transition: 0.2s ease;
}
.checkboxElement span.svg::before {
    content: '';
    width: 1rem;
    height: 1rem;
    margin: -1px; /* to offset 1px border on span.svg */
    background: var(--deep-theme-color);
    display: block;
    transform: scale(0);
    opacity: 1;
    border-radius: 999px;
    transition-delay: 0.2s;
    transform-origin: center;
    cursor: default;
}
.checkboxElement span.svg svg {
    position: absolute;
    z-index: 1;
    top: 0.25rem;
    left: 0.18rem;
    width: auto;
    height: 0.4rem;
    fill: none;
    stroke: #fff;
    stroke-width: 2;
    stroke-linecap: round;
    stroke-linejoin: round;
    stroke-dasharray: 1rem;
    stroke-dashoffset: 1rem;
    transition: all 0.3s ease;
    transition-delay: 0.2s;
    transform: translate3d(0,0,0);
}
.Checkbox input[type=checkbox] {
    position: absolute;
    z-index: 3;
    top: 0;
    left: 0;
    width: 1rem;
    height: 1rem;
    margin-bottom: 0;
    opacity: 0;
    user-select: none;
    cursor: pointer;
}
.Checkbox input[type=checkbox]:checked + span.svg {
    border: 1px solid var(--deep-theme-color);
    background: var(--deep-theme-color);
    animation: pulse 0.6s ease;
}
.Checkbox input[type=checkbox]:checked + span.svg::before {
    transform: scale(2.2);
    opacity: 0;
    transition: all 0.6s ease;
}
.Checkbox input[type=checkbox]:checked + span.svg svg {
    stroke-dashoffset: 0;
}
.checkboxElement:hover span.svg {
    border-color: var(--deep-theme-color);
}